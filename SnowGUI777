repeat
    task.wait()
until game:IsLoaded()
local library = {}
local ToggleUI = false
library.currentTab = nil
library.flags = {}

local services =
    setmetatable(
    {},
    {
        __index = function(t, k)
            return game.GetService(game, k)
        end
    }
)

local mouse = services.Players.LocalPlayer:GetMouse()

-- 增强版Tween函数，支持更多动画效果
function Tween(obj, t, data, callback)
    local tween = services.TweenService:Create(obj, TweenInfo.new(t[1], Enum.EasingStyle[t[2]], Enum.EasingDirection[t[3]]), data)
    tween:Play()
    if callback then
        tween.Completed:Connect(callback)
    end
    return tween
end

-- 增强版Ripple效果，增加材质和阴影
function Ripple(obj)
    spawn(
        function()
            if obj.ClipsDescendants ~= true then
                obj.ClipsDescendants = true
            end
            local Ripple = Instance.new("ImageLabel")
            Ripple.Name = "Ripple"
            Ripple.Parent = obj
            Ripple.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
            Ripple.BackgroundTransparency = 1.000
            Ripple.ZIndex = 8
            Ripple.Image = "rbxassetid://2708891598"
            Ripple.ImageTransparency = 0.800
            Ripple.ScaleType = Enum.ScaleType.Fit
            Ripple.ImageColor3 = Color3.fromRGB(100, 150, 255)
            
            -- 添加阴影效果
            local rippleShadow = Instance.new("ImageLabel")
            rippleShadow.Name = "Shadow"
            rippleShadow.Parent = Ripple
            rippleShadow.BackgroundTransparency = 1
            rippleShadow.Size = UDim2.new(1.2, 0, 1.2, 0)
            rippleShadow.Position = UDim2.new(-0.1, 0, -0.1, 0)
            rippleShadow.Image = "rbxassetid://5554236805"
            rippleShadow.ImageColor3 = Color3.fromRGB(0, 0, 0)
            rippleShadow.ImageTransparency = 0.7
            rippleShadow.ZIndex = 7
            
            Ripple.Position =
                UDim2.new(
                (mouse.X - Ripple.AbsolutePosition.X) / obj.AbsoluteSize.X,
                0,
                (mouse.Y - Ripple.AbsolutePosition.Y) / obj.AbsoluteSize.Y,
                0
            )
            
            -- 动画序列
            Tween(
                Ripple,
                {0.3, "Quad", "Out"},
                {
                    Position = UDim2.new(-5.5, 0, -5.5, 0), 
                    Size = UDim2.new(12, 0, 12, 0),
                    ImageTransparency = 0.6
                }
            )
            wait(0.15)
            Tween(Ripple, {0.3, "Quad", "In"}, {ImageTransparency = 1})
            Tween(rippleShadow, {0.3, "Quad", "In"}, {ImageTransparency = 1})
            wait(0.3)
            Ripple:Destroy()
        end
    )
end

local toggled = false

-- 增强版切换标签动画
local switchingTabs = false
function switchTab(new)
    if switchingTabs then
        return
    end
    local old = library.currentTab
    if old == nil then
        new[2].Visible = true
        library.currentTab = new
        
        -- 新标签进入动画
        new[1].Position = UDim2.new(0, 0, -0.2, 0)
        new[1].ImageTransparency = 1
        new[1].TabText.TextTransparency = 1
        
        Tween(new[1], {0.2, "Quad", "Out"}, {
            Position = UDim2.new(0, 0, 0, 0),
            ImageTransparency = 0
        })
        Tween(new[1].TabText, {0.2, "Quad", "Out"}, {TextTransparency = 0})
        return
    end

    if old[1] == new[1] then
        return
    end
    switchingTabs = true
    library.currentTab = new

    -- 旧标签淡出动画
    Tween(old[1], {0.15, "Quad", "In"}, {
        ImageTransparency = 0.5,
        Position = UDim2.new(0, 0, 0.1, 0)
    })
    Tween(old[1].TabText, {0.15, "Quad", "In"}, {TextTransparency = 0.5})
    
    -- 新标签淡入动画
    new[1].ImageTransparency = 1
    new[1].TabText.TextTransparency = 1
    new[1].Position = UDim2.new(0, 0, -0.1, 0)
    
    Tween(new[1], {0.15, "Quad", "Out"}, {
        ImageTransparency = 0,
        Position = UDim2.new(0, 0, 0, 0)
    })
    Tween(new[1].TabText, {0.15, "Quad", "Out"}, {TextTransparency = 0})

    old[2].Visible = false
    new[2].Visible = true

    -- 内容区域切换动画
    old[2].Position = UDim2.new(0, 0, 0, 0)
    new[2].Position = UDim2.new(0, 20, 0, 0)
    new[2].BackgroundTransparency = 1
    
    Tween(old[2], {0.15, "Quad", "In"}, {
        Position = UDim2.new(-0.1, 0, 0, 0),
        BackgroundTransparency = 1
    })
    Tween(new[2], {0.15, "Quad", "Out"}, {
        Position = UDim2.new(0, 0, 0, 0),
        BackgroundTransparency = 0
    })

    task.wait(0.15)
    switchingTabs = false
end

-- 增强版拖拽功能，增加惯性效果
function drag(frame, hold)
    if not hold then
        hold = frame
    end
    local dragging
    local dragInput
    local dragStart
    local startPos
    local lastPos = frame.Position
    local velocity = Vector2.new(0, 0)
    local lastTime = tick()

    local function update(input)
        local delta = input.Position - dragStart
        local newPos = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
        frame.Position = newPos
        
        -- 计算速度用于惯性
        local currentTime = tick()
        if currentTime ~= lastTime then
            velocity = (newPos - lastPos) * (1 / (currentTime - lastTime))
        end
        lastPos = newPos
        lastTime = currentTime
    end

    hold.InputBegan:Connect(
        function(input)
            if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
                dragging = true
                dragStart = input.Position
                startPos = frame.Position
                
                -- 取消任何现有的惯性动画
                if frame.inertiaTween then
                    frame.inertiaTween:Cancel()
                end

                input.Changed:Connect(
                    function()
                        if input.UserInputState == Enum.UserInputState.End then
                            dragging = false
                            
                            -- 应用惯性
                            if velocity.X.Offset ~= 0 or velocity.Y.Offset ~= 0 then
                                local decayFactor = 0.9 -- 衰减因子
                                local targetPos = UDim2.new(
                                    frame.Position.X.Scale,
                                    frame.Position.X.Offset + velocity.X.Offset * 0.1,
                                    frame.Position.Y.Scale,
                                    frame.Position.Y.Offset + velocity.Y.Offset * 0.1
                                )
                                
                                frame.inertiaTween = Tween(frame, {0.5, "Quad", "Out"}, {
                                    Position = targetPos
                                }, function()
                                    -- 惯性结束回调
                                end)
                            end
                        end
                    end
                )
            end
        end
    )

    frame.InputChanged:Connect(
        function(input)
            if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
                dragInput = input
            end
        end
    )

    services.UserInputService.InputChanged:Connect(
        function(input)
            if input == dragInput and dragging then
                update(input)
            end
        end
    )
end

function library.new(library, name, theme)
    for _, v in next, services.CoreGui:GetChildren() do
        if v.Name == "frosty is cute" then
            v:Destroy()
        end
    end

    -- 增强暗黑风格配色
    local MainColor = Color3.fromRGB(25, 25, 35)
    local Background = Color3.fromRGB(15, 15, 25)
    local zyColor = Color3.fromRGB(40, 40, 60)
    local beijingColor = Color3.fromRGB(60, 60, 80)
    local AccentColor = Color3.fromRGB(100, 150, 255) -- 蓝色作为点缀色
    local TextColor = Color3.fromRGB(220, 220, 220)
    local BorderColor = Color3.fromRGB(60, 60, 80)

    -- 透明度设置
    local Transparency = 0.2
    local HoverTransparency = 0.1
    local ActiveTransparency = 0
    local ElementTransparency = 0.3

    -- 创建主UI
    local dogent = Instance.new("ScreenGui")
    local Main = Instance.new("Frame")
    local TabMain = Instance.new("Frame")
    local MainC = Instance.new("UICorner")
    local SB = Instance.new("Frame")
    local SBC = Instance.new("UICorner")
    local Side = Instance.new("Frame")
    local SideG = Instance.new("UIGradient")
    local TabBtns = Instance.new("ScrollingFrame")
    local TabBtnsL = Instance.new("UIListLayout")
    local ScriptTitle = Instance.new("TextLabel")
    local SBG = Instance.new("UIGradient")
    local Open = Instance.new("TextButton")
    local UIG = Instance.new("UIGradient")
    local DropShadowHolder = Instance.new("Frame")
    local DropShadow = Instance.new("ImageLabel")
    local UICornerMain = Instance.new("UICorner")
    local UIGradient = Instance.new("UIGradient")
    local UIGradientTitle = Instance.new("UIGradient")
    local Border = Instance.new("Frame")
    local BorderGradient = Instance.new("UIGradient")
    local InnerGlow = Instance.new("ImageLabel")

    if syn and syn.protect_gui then
        syn.protect_gui(dogent)
    end

    dogent.Name = "frosty is cute"
    dogent.Parent = services.CoreGui
    dogent.ResetOnSpawn = false

    -- 增强UI销毁函数
    function UiDestroy()
        -- 缩小动画
        Tween(Main, {0.3, "Back", "In"}, {
            Size = UDim2.new(0, 0, 0, 0),
            Position = UDim2.new(0.5, 0, 0.5, 0)
        })
        Tween(Open, {0.3, "Back", "In"}, {
            Size = UDim2.new(0, 0, 0, 0),
            Position = UDim2.new(Open.Position.X.Scale, Open.Position.X.Offset + 25, Open.Position.Y.Scale, Open.Position.Y.Offset + 25)
        })
        wait(0.3)
        dogent:Destroy()
    end

    -- 增强UI切换函数
    function ToggleUILib()
        if not ToggleUI then
            -- 缩小动画
            Tween(Main, {0.3, "Back", "In"}, {
                Size = UDim2.new(0, 0, 0, 0),
                Position = UDim2.new(0.5, 0, 0.5, 0)
            })
            ToggleUI = true
        else
            -- 放大动画
            Main.Size = UDim2.new(0, 0, 0, 0)
            Main.Position = UDim2.new(0.5, 0, 0.5, 0)
            Main.Visible = true
            
            Tween(Main, {0.3, "Back", "Out"}, {
                Size = UDim2.new(0, 572, 0, 353),
                Position = UDim2.new(0.5, 0, 0.5, 0)
            })
            ToggleUI = false
        end
    end

    -- 主窗口设置
    Main.Name = "Main"
    Main.Parent = dogent
    Main.AnchorPoint = Vector2.new(0.5, 0.5)
    Main.BackgroundColor3 = Background
    Main.BackgroundTransparency = Transparency
    Main.BorderSizePixel = 0
    Main.Position = UDim2.new(0.5, 0, 0.5, 0)
    Main.Size = UDim2.new(0, 572, 0, 353)
    Main.ZIndex = 1
    Main.Active = true
    Main.Draggable = true
    
    -- 初始动画 - 从中心放大
    Main.Size = UDim2.new(0, 0, 0, 0)
    Tween(Main, {0.4, "Back", "Out"}, {
        Size = UDim2.new(0, 572, 0, 353)
    })

    -- 内发光效果
    InnerGlow.Name = "InnerGlow"
    InnerGlow.Parent = Main
    InnerGlow.BackgroundTransparency = 1
    InnerGlow.BorderSizePixel = 0
    InnerGlow.Size = UDim2.new(1, 0, 1, 0)
    InnerGlow.ZIndex = 2
    InnerGlow.Image = "rbxassetid://5028857084"
    InnerGlow.ImageColor3 = Color3.fromRGB(50, 50, 70)
    InnerGlow.ImageTransparency = 0.8
    InnerGlow.ScaleType = Enum.ScaleType.Slice
    InnerGlow.SliceCenter = Rect.new(24, 24, 276, 276)

    -- 彩色动态边框
    Border.Name = "Border"
    Border.Parent = Main
    Border.BackgroundColor3 = Color3.new(1, 1, 1)
    Border.BorderSizePixel = 0
    Border.Size = UDim2.new(1, 0, 1, 0)
    Border.ZIndex = 0
    
    BorderGradient.Color = ColorSequence.new{
        ColorSequenceKeypoint.new(0.00, Color3.fromRGB(255, 100, 100)),
        ColorSequenceKeypoint.new(0.25, Color3.fromRGB(100, 255, 100)),
        ColorSequenceKeypoint.new(0.50, Color3.fromRGB(100, 100, 255)),
        ColorSequenceKeypoint.new(0.75, Color3.fromRGB(255, 255, 100)),
        ColorSequenceKeypoint.new(1.00, Color3.fromRGB(255, 100, 255))
    }
    BorderGradient.Rotation = 90
    BorderGradient.Parent = Border
    
    local UICorner = Instance.new("UICorner", Border)
    UICorner.CornerRadius = UDim.new(0, 8)
    
    local borderTween = game:GetService("TweenService"):Create(
        BorderGradient,
        TweenInfo.new(5, Enum.EasingStyle.Linear, Enum.EasingDirection.InOut, -1),
        {Rotation = 360}
    )
    borderTween:Play()

    -- 主窗口圆角
    UICornerMain.Parent = Main
    UICornerMain.CornerRadius = UDim.new(0, 8)

    -- 高级阴影效果
    DropShadowHolder.Name = "DropShadowHolder"
    DropShadowHolder.Parent = Main
    DropShadowHolder.BackgroundTransparency = 1.000
    DropShadowHolder.BorderSizePixel = 0
    DropShadowHolder.Size = UDim2.new(1, 0, 1, 0)
    DropShadowHolder.BorderColor3 = Color3.fromRGB(255, 255, 255)
    DropShadowHolder.ZIndex = 0

    DropShadow.Name = "DropShadow"
    DropShadow.Parent = DropShadowHolder
    DropShadow.AnchorPoint = Vector2.new(0.5, 0.5)
    DropShadow.BackgroundTransparency = 1.000
    DropShadow.BorderSizePixel = 0
    DropShadow.Position = UDim2.new(0.5, 0, 0.5, 0)
    DropShadow.Size = UDim2.new(1, 43, 1, 43)
    DropShadow.ZIndex = 0
    DropShadow.Image = "rbxassetid://6015897843"
    DropShadow.ImageColor3 = Color3.fromRGB(0, 0, 0)
    DropShadow.ImageTransparency = 0.5
    DropShadow.ScaleType = Enum.ScaleType.Slice
    DropShadow.SliceCenter = Rect.new(49, 49, 450, 450)

    -- 渐变背景动画
    UIGradient.Color = ColorSequence.new{
        ColorSequenceKeypoint.new(0.00, Color3.fromRGB(25, 25, 35)),
        ColorSequenceKeypoint.new(0.50, Color3.fromRGB(45, 45, 65)),
        ColorSequenceKeypoint.new(1.00, Color3.fromRGB(25, 25, 35))
    }
    UIGradient.Parent = Main

    local TweenService = game:GetService("TweenService")
    local tweeninfo = TweenInfo.new(10, Enum.EasingStyle.Linear, Enum.EasingDirection.In, -1)
    local tween = TweenService:Create(UIGradient, tweeninfo, {Rotation = 360})
    tween:Play()

    -- 按键控制
    services.UserInputService.InputEnded:Connect(
        function(input)
            if input.KeyCode == Enum.KeyCode.LeftControl then
                ToggleUILib()
            end
        end
    )
    
    -- 增强拖拽功能
    drag(Main)

    -- 标签主区域
    TabMain.Name = "TabMain"
    TabMain.Parent = Main
    TabMain.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    TabMain.BackgroundTransparency = 1.000
    TabMain.Position = UDim2.new(0.217000037, 0, 0, 3)
    TabMain.Size = UDim2.new(0, 448, 0, 353)

    MainC.CornerRadius = UDim.new(0, 5.5)
    MainC.Name = "MainC"
    MainC.Parent = Main

    SB.Name = "SB"
    SB.Parent = Main
    SB.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    SB.BackgroundTransparency = Transparency
    SB.BorderSizePixel = 0
    SB.Size = UDim2.new(0, 8, 0, 353)

    SBC.CornerRadius = UDim.new(0, 6)
    SBC.Name = "SBC"
    SBC.Parent = SB

    Side.Name = "Side"
    Side.Parent = SB
    Side.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    Side.BackgroundTransparency = Transparency
    Side.BorderSizePixel = 0
    Side.ClipsDescendants = true
    Side.Position = UDim2.new(1, 0, 0, 0)
    Side.Size = UDim2.new(0, 110, 0, 353)

    -- 侧边栏渐变
    SideG.Color = ColorSequence.new{
        ColorSequenceKeypoint.new(0.00, Color3.fromRGB(25, 25, 35)),
        ColorSequenceKeypoint.new(1.00, Color3.fromRGB(45, 45, 65))
    }
    SideG.Rotation = 90
    SideG.Name = "SideG"
    SideG.Parent = Side

    TabBtns.Name = "TabBtns"
    TabBtns.Parent = Side
    TabBtns.Active = true
    TabBtns.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    TabBtns.BackgroundTransparency = 1.000
    TabBtns.BorderSizePixel = 0
    TabBtns.Position = UDim2.new(0, 0, 0.0973535776, 0)
    TabBtns.Size = UDim2.new(0, 110, 0, 318)
    TabBtns.CanvasSize = UDim2.new(0, 0, 1, 0)
    TabBtns.ScrollBarThickness = 0

    TabBtnsL.Name = "TabBtnsL"
    TabBtnsL.Parent = TabBtns
    TabBtnsL.SortOrder = Enum.SortOrder.LayoutOrder
    TabBtnsL.Padding = UDim.new(0, 12)

    -- 增强标题效果
    ScriptTitle.Name = "ScriptTitle"
    ScriptTitle.Parent = Side
    ScriptTitle.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    ScriptTitle.BackgroundTransparency = 1.000
    ScriptTitle.Position = UDim2.new(0, 0, 0.00953488424, 0)
    ScriptTitle.Size = UDim2.new(0, 102, 0, 20)
    ScriptTitle.Font = Enum.Font.GothamSemibold
    ScriptTitle.Text = name
    ScriptTitle.TextColor3 = AccentColor
    ScriptTitle.TextSize = 14.000
    ScriptTitle.TextScaled = true
    ScriptTitle.TextXAlignment = Enum.TextXAlignment.Left
    
    -- 标题描边
    local titleStroke = Instance.new("UIStroke", ScriptTitle)
    titleStroke.Color = Color3.fromRGB(20, 20, 30)
    titleStroke.Thickness = 1
    titleStroke.Transparency = 0.5
    
    -- 标题渐变
    UIGradientTitle.Color = ColorSequence.new{
        ColorSequenceKeypoint.new(0.00, AccentColor),
        ColorSequenceKeypoint.new(0.50, Color3.fromRGB(255, 255, 255)),
        ColorSequenceKeypoint.new(1.00, AccentColor)
    }
    UIGradientTitle.Parent = ScriptTitle

    -- 标题动画
    local titleTween = game:GetService("TweenService"):Create(
        UIGradientTitle,
        TweenInfo.new(3, Enum.EasingStyle.Linear, Enum.EasingDirection.InOut, -1),
        {Offset = Vector2.new(1, 0)}
    )
    titleTween:Play()

    SBG.Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, zyColor), ColorSequenceKeypoint.new(1.00, zyColor)}
    SBG.Rotation = 90
    SBG.Name = "SBG"
    SBG.Parent = SB

    TabBtnsL:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(
        function()
            TabBtns.CanvasSize = UDim2.new(0, 0, 0, TabBtnsL.AbsoluteContentSize.Y + 18)
        end
    )

    -- 打开/关闭按钮（增强版）
    Open.Name = "Open"
    Open.Parent = dogent
    Open.BackgroundColor3 = Background
    Open.BackgroundTransparency = Transparency
    Open.Position = UDim2.new(0.00829315186, 0, 0.31107837, 0)
    Open.Size = UDim2.new(0, 50, 0, 50)
    Open.Font = Enum.Font.SourceSans
    Open.Text = ""
    Open.TextTransparency = 1
    Open.TextSize = 14.000
    Open.Active = true
    Open.Draggable = true

    -- 按钮圆角
    local UICorner = Instance.new("UICorner", Open)
    UICorner.CornerRadius = UDim.new(0, 9)

    -- 按钮描边
    local openStroke = Instance.new("UIStroke", Open)
    openStroke.Color = BorderColor
    openStroke.Thickness = 1
    openStroke.Transparency = 0.5

    -- 按钮图标
    local OpenImage = Instance.new("ImageLabel")
    OpenImage.Name = "OpenImage"
    OpenImage.Parent = Open
    OpenImage.BackgroundTransparency = 1
    OpenImage.Size = UDim2.new(0.8, 0, 0.8, 0)
    OpenImage.Position = UDim2.new(0.1, 0, 0.1, 0)
    OpenImage.Image = "rbxassetid://7734068321"
    OpenImage.ImageColor3 = AccentColor
    OpenImage.ScaleType = Enum.ScaleType.Fit

    -- 按钮悬停效果
    Open.MouseEnter:Connect(function()
        game:GetService("TweenService"):Create(
            Open,
            TweenInfo.new(0.2),
            {
                BackgroundTransparency = HoverTransparency,
                Size = UDim2.new(0, 55, 0, 55)
            }
        ):Play()
        game:GetService("TweenService"):Create(
            openStroke,
            TweenInfo.new(0.2),
            {
                Color = AccentColor,
                Thickness = 2
            }
        ):Play()
    end)

    Open.MouseLeave:Connect(function()
        game:GetService("TweenService"):Create(
            Open,
            TweenInfo.new(0.2),
            {
                BackgroundTransparency = Transparency,
                Size = UDim2.new(0, 50, 0, 50)
            }
        ):Play()
        game:GetService("TweenService"):Create(
            openStroke,
            TweenInfo.new(0.2),
            {
                Color = BorderColor,
                Thickness = 1
            }
        ):Play()
    end)

    local isVisible = true
    Open.MouseButton1Click:Connect(function()
        if isVisible then
            -- 缩小动画
            Tween(Main, {0.3, "Back", "In"}, {
                Size = UDim2.new(0, 0, 0, 0),
                Position = UDim2.new(0.5, 0, 0.5, 0)
            })
            Tween(OpenImage, {0.3, "Quad", "Out"}, {
                Rotation = 180,
                ImageColor3 = Color3.fromRGB(255, 100, 100)
            })
        else
            -- 放大动画
            Main.Size = UDim2.new(0, 0, 0, 0)
            Main.Position = UDim2.new(0.5, 0, 0.5, 0)
            Main.Visible = true
            
            Tween(Main, {0.3, "Back", "Out"}, {
                Size = UDim2.new(0, 572, 0, 353),
                Position = UDim2.new(0.5, 0, 0.5, 0)
            })
            Tween(OpenImage, {0.3, "Quad", "Out"}, {
                Rotation = 0,
                ImageColor3 = AccentColor
            })
        end
        isVisible = not isVisible
    end)

    UIG.Parent = Open
    local window = {}
    
    function window.Tab(window, name, icon)
        local Tab = Instance.new("ScrollingFrame")
        local TabIco = Instance.new("ImageLabel")
        local TabText = Instance.new("TextLabel")
        local TabBtn = Instance.new("TextButton")
        local TabL = Instance.new("UIListLayout")

        Tab.Name = "Tab"
        Tab.Parent = TabMain
        Tab.Active = true
        Tab.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        Tab.BackgroundTransparency = 1.000
        Tab.Size = UDim2.new(1, 0, 1, 0)
        Tab.ScrollBarThickness = 2
        Tab.Visible = false
        Tab.ScrollBarImageColor3 = AccentColor

        TabIco.Name = "TabIco"
        TabIco.Parent = TabBtns
        TabIco.BackgroundTransparency = 1.000
        TabIco.BorderSizePixel = 0
        TabIco.Size = UDim2.new(0, 24, 0, 24)
        TabIco.Image = ("rbxassetid://%s"):format((icon or 4370341699))
        TabIco.ImageTransparency = 0.5
        TabIco.ImageColor3 = TextColor

        -- 图标动画
        TabIco.Size = UDim2.new(0, 0, 0, 24)
        Tween(TabIco, {0.2, "Quad", "Out"}, {
            Size = UDim2.new(0, 24, 0, 24)
        })

        TabText.Name = "TabText"
        TabText.Parent = TabIco
        TabText.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        TabText.BackgroundTransparency = 1.000
        TabText.Position = UDim2.new(1.41666663, 0, 0, 0)
        TabText.Size = UDim2.new(0, 76, 0, 24)
        TabText.Font = Enum.Font.GothamSemibold
        TabText.Text = name
        TabText.TextColor3 = TextColor
        TabText.TextTransparency = 0.5
        TabText.TextSize = 14.000
        TabText.TextXAlignment = Enum.TextXAlignment.Left

        -- 文本描边
        local textStroke = Instance.new("UIStroke", TabText)
        textStroke.Color = Color3.fromRGB(20, 20, 30)
        textStroke.Thickness = 1
        textStroke.Transparency = 0.7

        TabBtn.Name = "TabBtn"
        TabBtn.Parent = TabIco
        TabBtn.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
        TabBtn.BackgroundTransparency = 1.000
        TabBtn.BorderSizePixel = 0
        TabBtn.Size = UDim2.new(0, 110, 0, 24)
        TabBtn.AutoButtonColor = false
        TabBtn.Font = Enum.Font.SourceSans
        TabBtn.Text = ""
        TabBtn.TextColor3 = Color3.fromRGB(0, 0, 0)
        TabBtn.TextSize = 14.000

        TabL.Name = "TabL"
        TabL.Parent = Tab
        TabL.SortOrder = Enum.SortOrder.LayoutOrder
        TabL.Padding = UDim.new(0, 4)

        -- 悬停效果
        TabBtn.MouseEnter:Connect(function()
            Tween(TabIco, {0.2, "Quad", "Out"}, {
                ImageTransparency = 0,
                ImageColor3 = AccentColor
            })
            Tween(TabText, {0.2, "Quad", "Out"}, {
                TextTransparency = 0,
                TextColor3 = AccentColor
            })
        end)

        TabBtn.MouseLeave:Connect(function()
            if library.currentTab and library.currentTab[1] ~= TabIco then
                Tween(TabIco, {0.2, "Quad", "Out"}, {
                    ImageTransparency = 0.5,
                    ImageColor3 = TextColor
                })
                Tween(TabText, {0.2, "Quad", "Out"}, {
                    TextTransparency = 0.5,
                    TextColor3 = TextColor
                })
            end
        end)

        TabBtn.MouseButton1Click:Connect(
            function()
                spawn(
                    function()
                        Ripple(TabBtn)
                    end
                )
                switchTab({TabIco, Tab})
            end
        )

        if library.currentTab == nil then
            switchTab({TabIco, Tab})
        end

        TabL:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(
            function()
                Tab.CanvasSize = UDim2.new(0, 0, 0, TabL.AbsoluteContentSize.Y + 8)
            end
        )

        local tab = {}
        function tab.section(tab, name, TabVal)
            local Section = Instance.new("Frame")
            local SectionC = Instance.new("UICorner")
            local SectionText = Instance.new("TextLabel")
            local SectionOpen = Instance.new("ImageLabel")
            local SectionOpened = Instance.new("ImageLabel")
            local SectionToggle = Instance.new("ImageButton")
            local Objs = Instance.new("Frame")
            local ObjsL = Instance.new("UIListLayout")

            Section.Name = "Section"
            Section.Parent = Tab
            Section.BackgroundColor3 = zyColor
            Section.BackgroundTransparency = Transparency
            Section.BorderSizePixel = 0
            Section.ClipsDescendants = true
            Section.Size = UDim2.new(0.981000006, 0, 0, 36)
            
            -- 初始动画
            Section.Position = UDim2.new(0, 0, 0, -40)
            Section.BackgroundTransparency = 1
            Tween(Section, {0.2, "Quad", "Out"}, {
                Position = UDim2.new(0, 0, 0, 0),
                BackgroundTransparency = Transparency
            })

            SectionC.CornerRadius = UDim.new(0, 8)
            SectionC.Name = "SectionC"
            SectionC.Parent = Section

            SectionText.Name = "SectionText"
            SectionText.Parent = Section
            SectionText.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
            SectionText.BackgroundTransparency = 1.000
            SectionText.Position = UDim2.new(0.0887396261, 0, 0, 0)
            SectionText.Size = UDim2.new(0, 401, 0, 36)
            SectionText.Font = Enum.Font.GothamSemibold
            SectionText.Text = name
            SectionText.TextColor3 = TextColor
            SectionText.TextSize = 16.000
            SectionText.TextXAlignment = Enum.TextXAlignment.Left

            -- 文本描边
            local sectionTextStroke = Instance.new("UIStroke", SectionText)
            sectionTextStroke.Color = Color3.fromRGB(20, 20, 30)
            sectionTextStroke.Thickness = 1
            sectionTextStroke.Transparency = 0.7

            SectionOpen.Name = "SectionOpen"
            SectionOpen.Parent = SectionText
            SectionOpen.BackgroundTransparency = 1
            SectionOpen.BorderSizePixel = 0
            SectionOpen.Position = UDim2.new(0, -33, 0, 5)
            SectionOpen.Size = UDim2.new(0, 26, 0, 26)
            SectionOpen.Image = "http://www.roblox.com/asset/?id=6031302934"
            SectionOpen.ImageColor3 = AccentColor

            SectionOpened.Name = "SectionOpened"
            SectionOpened.Parent = SectionOpen
            SectionOpened.BackgroundTransparency = 1.000
            SectionOpened.BorderSizePixel = 0
            SectionOpened.Size = UDim2.new(0, 26, 0, 26)
            SectionOpened.Image = "http://www.roblox.com/asset/?id=6031302932"
            SectionOpened.ImageTransparency = 1.000
            SectionOpened.ImageColor3 = AccentColor

            SectionToggle.Name = "SectionToggle"
            SectionToggle.Parent = SectionOpen
            SectionToggle.BackgroundTransparency = 1
            SectionToggle.BorderSizePixel = 0
            SectionToggle.Size = UDim2.new(0, 26, 0, 26)

            Objs.Name = "Objs"
            Objs.Parent = Section
            Objs.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
            Objs.BackgroundTransparency = 1
            Objs.BorderSizePixel = 0
            Objs.Position = UDim2.new(0, 6, 0, 36)
            Objs.Size = UDim2.new(0.986347735, 0, 0, 0)

            ObjsL.Name = "ObjsL"
            ObjsL.Parent = Objs
            ObjsL.SortOrder = Enum.SortOrder.LayoutOrder
            ObjsL.Padding = UDim.new(0, 8)

            local open = TabVal
            if TabVal ~= false then
                Section.Size = UDim2.new(0.981000006, 0, 0, open and 36 + ObjsL.AbsoluteContentSize.Y + 8 or 36)
                SectionOpened.ImageTransparency = (open and 0 or 1)
                SectionOpen.ImageTransparency = (open and 1 or 0)
            end

            SectionToggle.MouseButton1Click:Connect(
                function()
                    open = not open
                    Tween(Section, {0.2, "Quad", "Out"}, {
                        Size = UDim2.new(0.981000006, 0, 0, open and 36 + ObjsL.AbsoluteContentSize.Y + 8 or 36)
                    })
                    Tween(SectionOpened, {0.2, "Quad", "Out"}, {
                        ImageTransparency = (open and 0 or 1)
                    })
                    Tween(SectionOpen, {0.2, "Quad", "Out"}, {
                        ImageTransparency = (open and 1 or 0)
                    })
                end
            )

            ObjsL:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(
                function()
                    if not open then
                        return
                    end
                    Section.Size = UDim2.new(0.981000006, 0, 0, 36 + ObjsL.AbsoluteContentSize.Y + 8)
                end
            )

            local section = {}
            
            function section.Button(section, text, callback)
                local callback = callback or function() end

                local BtnModule = Instance.new("Frame")
                local Btn = Instance.new("TextButton")
                local BtnC = Instance.new("UICorner")
                local BtnStroke = Instance.new("UIStroke")

                BtnModule.Name = "BtnModule"
                BtnModule.Parent = Objs
                BtnModule.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                BtnModule.BackgroundTransparency = 1.000
                BtnModule.BorderSizePixel = 0
                BtnModule.Position = UDim2.new(0, 0, 0, 0)
                BtnModule.Size = UDim2.new(0, 428, 0, 38)
                
                -- 初始动画
                BtnModule.Position = UDim2.new(0, 20, 0, 0)
                BtnModule.BackgroundTransparency = 1
                Tween(BtnModule, {0.2, "Quad", "Out"}, {
                    Position = UDim2.new(0, 0, 0, 0),
                    BackgroundTransparency = 1
                })

                Btn.Name = "Btn"
                Btn.Parent = BtnModule
                Btn.BackgroundColor3 = zyColor
                Btn.BackgroundTransparency = Transparency
                Btn.BorderSizePixel = 0
                Btn.Size = UDim2.new(0, 428, 0, 38)
                Btn.AutoButtonColor = false
                Btn.Font = Enum.Font.GothamSemibold
                Btn.Text = "   " .. text
                Btn.TextColor3 = TextColor
                Btn.TextSize = 16.000
                Btn.TextXAlignment = Enum.TextXAlignment.Left

                BtnC.CornerRadius = UDim.new(0, 8)
                BtnC.Name = "BtnC"
                BtnC.Parent = Btn
                
                -- 按钮描边
                BtnStroke.Name = "BtnStroke"
                BtnStroke.Parent = Btn
                BtnStroke.Color = BorderColor
                BtnStroke.Thickness = 1
                BtnStroke.Transparency = 0.5

                -- 按钮悬停效果
                Btn.MouseEnter:Connect(function()
                    game:GetService("TweenService"):Create(
                        Btn,
                        TweenInfo.new(0.2),
                        {
                            BackgroundTransparency = HoverTransparency,
                            TextColor3 = AccentColor
                        }
                    ):Play()
                    game:GetService("TweenService"):Create(
                        BtnStroke,
                        TweenInfo.new(0.2),
                        {
                            Color = AccentColor,
                            Thickness = 2
                        }
                    ):Play()
                end)

                Btn.MouseLeave:Connect(function()
                    game:GetService("TweenService"):Create(
                        Btn,
                        TweenInfo.new(0.2),
                        {
                            BackgroundTransparency = Transparency,
                            TextColor3 = TextColor
                        }
                    ):Play()
                    game:GetService("TweenService"):Create(
                        BtnStroke,
                        TweenInfo.new(0.2),
                        {
                            Color = BorderColor,
                            Thickness = 1
                        }
                    ):Play()
                end)

                Btn.MouseButton1Click:Connect(
                    function()
                        spawn(
                            function()
                                Ripple(Btn)
                            end
                        )
                        spawn(callback)
                        
                        -- 点击动画
                        Tween(Btn, {0.1, "Quad", "Out"}, {
                            BackgroundTransparency = ActiveTransparency,
                            Size = UDim2.new(0, 428, 0, 36)
                        }, function()
                            Tween(Btn, {0.1, "Quad", "Out"}, {
                                BackgroundTransparency = HoverTransparency,
                                Size = UDim2.new(0, 428, 0, 38)
                            })
                        end)
                    end
                )
            end

            function section:Label(text)
                local LabelModule = Instance.new("Frame")
                local TextLabel = Instance.new("TextLabel")
                local LabelC = Instance.new("UICorner")
                local LabelStroke = Instance.new("UIStroke")

                LabelModule.Name = "LabelModule"
                LabelModule.Parent = Objs
                LabelModule.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                LabelModule.BackgroundTransparency = 1.000
                LabelModule.BorderSizePixel = 0
                LabelModule.Position = UDim2.new(0, 0, NAN, 0)
                LabelModule.Size = UDim2.new(0, 428, 0, 19)
                
                -- 初始动画
                LabelModule.Position = UDim2.new(0, 20, 0, 0)
                LabelModule.BackgroundTransparency = 1
                Tween(LabelModule, {0.2, "Quad", "Out"}, {
                    Position = UDim2.new(0, 0, 0, 0),
                    BackgroundTransparency = 1
                })

                TextLabel.Parent = LabelModule
                TextLabel.BackgroundColor3 = zyColor
                TextLabel.BackgroundTransparency = Transparency
                TextLabel.Size = UDim2.new(0, 428, 0, 22)
                TextLabel.Font = Enum.Font.GothamSemibold
                TextLabel.Text = text
                TextLabel.TextColor3 = TextColor
                TextLabel.TextSize = 14.000

                LabelC.CornerRadius = UDim.new(0, 6)
                LabelC.Name = "LabelC"
                LabelC.Parent = TextLabel
                
                -- 标签描边
                LabelStroke.Name = "LabelStroke"
                LabelStroke.Parent = TextLabel
                LabelStroke.Color = BorderColor
                LabelStroke.Thickness = 1
                LabelStroke.Transparency = 0.5
                
                -- 悬停效果
                TextLabel.MouseEnter:Connect(function()
                    Tween(TextLabel, {0.2, "Quad", "Out"}, {
                        BackgroundTransparency = HoverTransparency,
                        TextColor3 = AccentColor
                    })
                    Tween(LabelStroke, {0.2, "Quad", "Out"}, {
                        Color = AccentColor,
                        Thickness = 2
                    })
                end)
                
                TextLabel.MouseLeave:Connect(function()
                    Tween(TextLabel, {0.2, "Quad", "Out"}, {
                        BackgroundTransparency = Transparency,
                        TextColor3 = TextColor
                    })
                    Tween(LabelStroke, {0.2, "Quad", "Out"}, {
                        Color = BorderColor,
                        Thickness = 1
                    })
                end)
                
                return TextLabel
            end

            function section.Toggle(section, text, flag, enabled, callback)
                local callback = callback or function() end
                local enabled = enabled or false
                assert(text, "No text provided")
                assert(flag, "No flag provided")

                library.flags[flag] = enabled

                local ToggleModule = Instance.new("Frame")
                local ToggleBtn = Instance.new("TextButton")
                local ToggleBtnC = Instance.new("UICorner")
                local ToggleDisable = Instance.new("Frame")
                local ToggleSwitch = Instance.new("Frame")
                local ToggleSwitchC = Instance.new("UICorner")
                local ToggleDisableC = Instance.new("UICorner")
                local ToggleStroke = Instance.new("UIStroke")

                ToggleModule.Name = "ToggleModule"
                ToggleModule.Parent = Objs
                ToggleModule.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                ToggleModule.BackgroundTransparency = 1.000
                ToggleModule.BorderSizePixel = 0
                ToggleModule.Position = UDim2.new(0, 0, 0, 0)
                ToggleModule.Size = UDim2.new(0, 428, 0, 38)
                
                -- 初始动画
                ToggleModule.Position = UDim2.new(0, 20, 0, 0)
                ToggleModule.BackgroundTransparency = 1
                Tween(ToggleModule, {0.2, "Quad", "Out"}, {
                    Position = UDim2.new(0, 0, 0, 0),
                    BackgroundTransparency = 1
                })

                ToggleBtn.Name = "ToggleBtn"
                ToggleBtn.Parent = ToggleModule
                ToggleBtn.BackgroundColor3 = zyColor
                ToggleBtn.BackgroundTransparency = Transparency
                ToggleBtn.BorderSizePixel = 0
                ToggleBtn.Size = UDim2.new(0, 428, 0, 38)
                ToggleBtn.AutoButtonColor = false
                ToggleBtn.Font = Enum.Font.GothamSemibold
                ToggleBtn.Text = "   " .. text
                ToggleBtn.TextColor3 = TextColor
                ToggleBtn.TextSize = 16.000
                ToggleBtn.TextXAlignment = Enum.TextXAlignment.Left

                ToggleBtnC.CornerRadius = UDim.new(0, 8)
                ToggleBtnC.Name = "ToggleBtnC"
                ToggleBtnC.Parent = ToggleBtn
                
                -- 描边
                ToggleStroke.Name = "ToggleStroke"
                ToggleStroke.Parent = ToggleBtn
                ToggleStroke.Color = BorderColor
                ToggleStroke.Thickness = 1
                ToggleStroke.Transparency = 0.5

                ToggleDisable.Name = "ToggleDisable"
                ToggleDisable.Parent = ToggleBtn
                ToggleDisable.BackgroundColor3 = Background
                ToggleDisable.BackgroundTransparency = Transparency
                ToggleDisable.BorderSizePixel = 0
                ToggleDisable.Position = UDim2.new(0.901869178, 0, 0.208881587, 0)
                ToggleDisable.Size = UDim2.new(0, 36, 0, 22)

                ToggleSwitch.Name = "ToggleSwitch"
                ToggleSwitch.Parent = ToggleDisable
                ToggleSwitch.BackgroundColor3 = beijingColor
                ToggleSwitch.Size = UDim2.new(0, 24, 0, 22)

                ToggleSwitchC.CornerRadius = UDim.new(0, 6)
                ToggleSwitchC.Name = "ToggleSwitchC"
                ToggleSwitchC.Parent = ToggleSwitch

                ToggleDisableC.CornerRadius = UDim.new(0, 6)
                ToggleDisableC.Name = "ToggleDisableC"
                ToggleDisableC.Parent = ToggleDisable

                local funcs = {
                    SetState = function(self, state)
                        if state == nil then
                            state = not library.flags[flag]
                        end
                        if library.flags[flag] == state then
                            return
                        end
                        services.TweenService:Create(
                            ToggleSwitch,
                            TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out),
                            {
                                Position = UDim2.new(0, (state and ToggleSwitch.Size.X.Offset / 2 or 0), 0, 0),
                                BackgroundColor3 = (state and AccentColor or beijingColor)
                            }
                        ):Play()
                        library.flags[flag] = state
                        callback(state)
                    end,
                    Module = ToggleModule
                }

                if enabled ~= false then
                    funcs:SetState(flag, true)
                end

                -- 悬停效果
                ToggleBtn.MouseEnter:Connect(function()
                    game:GetService("TweenService"):Create(
                        ToggleBtn,
                        TweenInfo.new(0.2),
                        {
                            BackgroundTransparency = HoverTransparency,
                            TextColor3 = AccentColor
                        }
                    ):Play()
                    game:GetService("TweenService"):Create(
                        ToggleStroke,
                        TweenInfo.new(0.2),
                        {
                            Color = AccentColor,
                            Thickness = 2
                        }
                    ):Play()
                end)

                ToggleBtn.MouseLeave:Connect(function()
                    game:GetService("TweenService"):Create(
                        ToggleBtn,
                        TweenInfo.new(0.2),
                        {
                            BackgroundTransparency = Transparency,
                            TextColor3 = TextColor
                        }
                    ):Play()
                    game:GetService("TweenService"):Create(
                        ToggleStroke,
                        TweenInfo.new(0.2),
                        {
                            Color = BorderColor,
                            Thickness = 1
                        }
                    ):Play()
                end)

                ToggleBtn.MouseButton1Click:Connect(
                    function()
                        funcs:SetState()
                        spawn(function() Ripple(ToggleBtn) end)
                    end
                )
                return funcs
            end

            function section.Keybind(section, text, default, callback)
                local callback = callback or function() end
                assert(text, "No text provided")
                assert(default, "No default key provided")

                local default = (typeof(default) == "string" and Enum.KeyCode[default] or default)
                local banned = {
                    Return = true,
                    Space = true,
                    Tab = true,
                    Backquote = true,
                    CapsLock = true,
                    Escape = true,
                    Unknown = true
                }
                local shortNames = {
                    RightControl = "Right Ctrl",
                    LeftControl = "Left Ctrl",
                    LeftShift = "Left Shift",
                    RightShift = "Right Shift",
                    Semicolon = ";",
                    Quote = '"',
                    LeftBracket = "[",
                    RightBracket = "]",
                    Equals = "=",
                    Minus = "-",
                    RightAlt = "Right Alt",
                    LeftAlt = "Left Alt"
                }

                local bindKey = default
                local keyTxt = (default and (shortNames[default.Name] or default.Name) or "None"

                local KeybindModule = Instance.new("Frame")
                local KeybindBtn = Instance.new("TextButton")
                local KeybindBtnC = Instance.new("UICorner")
                local KeybindValue = Instance.new("TextButton")
                local KeybindValueC = Instance.new("UICorner")
                local KeybindL = Instance.new("UIListLayout")
                local UIPadding = Instance.new("UIPadding")
                local KeybindStroke = Instance.new("UIStroke")

                KeybindModule.Name = "KeybindModule"
                KeybindModule.Parent = Objs
                KeybindModule.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                KeybindModule.BackgroundTransparency = 1.000
                KeybindModule.BorderSizePixel = 0
                KeybindModule.Position = UDim2.new(0, 0, 0, 0)
                KeybindModule.Size = UDim2.new(0, 428, 0, 38)
                
                -- 初始动画
                KeybindModule.Position = UDim2.new(0, 20, 0, 0)
                KeybindModule.BackgroundTransparency = 1
                Tween(KeybindModule, {0.2, "Quad", "Out"}, {
                    Position = UDim2.new(0, 0, 0, 0),
                    BackgroundTransparency = 1
                })

                KeybindBtn.Name = "KeybindBtn"
                KeybindBtn.Parent = KeybindModule
                KeybindBtn.BackgroundColor3 = zyColor
                KeybindBtn.BackgroundTransparency = Transparency
                KeybindBtn.BorderSizePixel = 0
                KeybindBtn.Size = UDim2.new(0, 428, 0, 38)
                KeybindBtn.AutoButtonColor = false
                KeybindBtn.Font = Enum.Font.GothamSemibold
                KeybindBtn.Text = "   " .. text
                KeybindBtn.TextColor3 = TextColor
                KeybindBtn.TextSize = 16.000
                KeybindBtn.TextXAlignment = Enum.TextXAlignment.Left

                KeybindBtnC.CornerRadius = UDim.new(0, 8)
                KeybindBtnC.Name = "KeybindBtnC"
                KeybindBtnC.Parent = KeybindBtn
                
                -- 描边
                KeybindStroke.Name = "KeybindStroke"
                KeybindStroke.Parent = KeybindBtn
                KeybindStroke.Color = BorderColor
                KeybindStroke.Thickness = 1
                KeybindStroke.Transparency = 0.5

                KeybindValue.Name = "KeybindValue"
                KeybindValue.Parent = KeybindBtn
                KeybindValue.BackgroundColor3 = Background
                KeybindValue.BackgroundTransparency = Transparency
                KeybindValue.BorderSizePixel = 0
                KeybindValue.Position = UDim2.new(0.763033211, 0, 0.289473683, 0)
                KeybindValue.Size = UDim2.new(0, 100, 0, 28)
                KeybindValue.AutoButtonColor = false
                KeybindValue.Font = Enum.Font.Gotham
                KeybindValue.Text = keyTxt
                KeybindValue.TextColor3 = TextColor
                KeybindValue.TextSize = 14.000

                KeybindValueC.CornerRadius = UDim.new(0, 6)
                KeybindValueC.Name = "KeybindValueC"
                KeybindValueC.Parent = KeybindValue

                KeybindL.Name = "KeybindL"
                KeybindL.Parent = KeybindBtn
                KeybindL.HorizontalAlignment = Enum.HorizontalAlignment.Right
                KeybindL.SortOrder = Enum.SortOrder.LayoutOrder
                KeybindL.VerticalAlignment = Enum.VerticalAlignment.Center

                UIPadding.Parent = KeybindBtn
                UIPadding.PaddingRight = UDim.new(0, 6)

                -- 悬停效果
                KeybindBtn.MouseEnter:Connect(function()
                    game:GetService("TweenService"):Create(
                        KeybindBtn,
                        TweenInfo.new(0.2),
                        {
                            BackgroundTransparency = HoverTransparency,
                            TextColor3 = AccentColor
                        }
                    ):Play()
                    game:GetService("TweenService"):Create(
                        KeybindStroke,
                        TweenInfo.new(0.2),
                        {
                            Color = AccentColor,
                            Thickness = 2
                        }
                    ):Play()
                end)

                KeybindBtn.MouseLeave:Connect(function()
                    game:GetService("TweenService"):Create(
                        KeybindBtn,
                        TweenInfo.new(0.2),
                        {
                            BackgroundTransparency = Transparency,
                            TextColor3 = TextColor
                        }
                    ):Play()
                    game:GetService("TweenService"):Create(
                        KeybindStroke,
                        TweenInfo.new(0.2),
                        {
                            Color = BorderColor,
                            Thickness = 1
                        }
                    ):Play()
                end)

                KeybindValue.MouseEnter:Connect(function()
                    game:GetService("TweenService"):Create(
                        KeybindValue,
                        TweenInfo.new(0.2),
                        {
                            BackgroundTransparency = HoverTransparency,
                            TextColor3 = AccentColor
                        }
                    ):Play()
                end)

                KeybindValue.MouseLeave:Connect(function()
                    game:GetService("TweenService"):Create(
                        KeybindValue,
                        TweenInfo.new(0.2),
                        {
                            BackgroundTransparency = Transparency,
                            TextColor3 = TextColor
                        }
                    ):Play()
                end)

                services.UserInputService.InputBegan:Connect(
                    function(inp, gpe)
                        if gpe then
                            return
                        end
                        if inp.UserInputType ~= Enum.UserInputType.Keyboard then
                            return
                        end
                        if inp.KeyCode ~= bindKey then
                            return
                        end
                        callback(bindKey.Name)
                        
                        -- 按键反馈动画
                        Tween(KeybindValue, {0.1, "Quad", "Out"}, {
                            BackgroundTransparency = ActiveTransparency,
                            Size = UDim2.new(0, 95, 0, 26)
                        }, function()
                            Tween(KeybindValue, {0.1, "Quad", "Out"}, {
                                BackgroundTransparency = Transparency,
                                Size = UDim2.new(0, 100, 0, 28)
                            })
                        end)
                    end
                )

                KeybindValue.MouseButton1Click:Connect(
                    function()
                        KeybindValue.Text = "..."
                        Tween(KeybindValue, {0.2, "Quad", "Out"}, {
                            BackgroundColor3 = AccentColor,
                            TextColor3 = Color3.fromRGB(255, 255, 255)
                        })
                        wait()
                        local key, uwu = services.UserInputService.InputEnded:Wait()
                        local keyName = tostring(key.KeyCode.Name)
                        if key.UserInputType ~= Enum.UserInputType.Keyboard then
                            KeybindValue.Text = keyTxt
                            Tween(KeybindValue, {0.2, "Quad", "Out"}, {
                                BackgroundColor3 = Background,
                                TextColor3 = TextColor
                            })
                            return
                        end
                        if banned[keyName] then
                            KeybindValue.Text = keyTxt
                            Tween(KeybindValue, {0.2, "Quad", "Out"}, {
                                BackgroundColor3 = Background,
                                TextColor3 = TextColor
                            })
                            return
                        end
                        wait()
                        bindKey = Enum.KeyCode[keyName]
                        KeybindValue.Text = shortNames[keyName] or keyName
                        Tween(KeybindValue, {0.2, "Quad", "Out"}, {
                            BackgroundColor3 = Background,
                            TextColor3 = TextColor
                        })
                    end
                )

                KeybindValue:GetPropertyChangedSignal("TextBounds"):Connect(
                    function()
                        KeybindValue.Size = UDim2.new(0, KeybindValue.TextBounds.X + 30, 0, 28)
                    end
                )
                KeybindValue.Size = UDim2.new(0, KeybindValue.TextBounds.X + 30, 0, 28)
            end

            function section.Textbox(section, text, flag, default, callback)
                local callback = callback or function() end
                assert(text, "No text provided")
                assert(flag, "No flag provided")
                assert(default, "No default text provided")

                library.flags[flag] = default

                local TextboxModule = Instance.new("Frame")
                local TextboxBack = Instance.new("TextButton")
                local TextboxBackC = Instance.new("UICorner")
                local BoxBG = Instance.new("TextButton")
                local BoxBGC = Instance.new("UICorner")
                local TextBox = Instance.new("TextBox")
                local TextboxBackL = Instance.new("UIListLayout")
                local TextboxBackP = Instance.new("UIPadding")
                local TextboxStroke = Instance.new("UIStroke")

                TextboxModule.Name = "TextboxModule"
                TextboxModule.Parent = Objs
                TextboxModule.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                TextboxModule.BackgroundTransparency = 1.000
                TextboxModule.BorderSizePixel = 0
                TextboxModule.Position = UDim2.new(0, 0, 0, 0)
                TextboxModule.Size = UDim2.new(0, 428, 0, 38)
                
                -- 初始动画
                TextboxModule.Position = UDim2.new(0, 20, 0, 0)
                TextboxModule.BackgroundTransparency = 1
                Tween(TextboxModule, {0.2, "Quad", "Out"}, {
                    Position = UDim2.new(0, 0, 0, 0),
                    BackgroundTransparency = 1
                })

                TextboxBack.Name = "TextboxBack"
                TextboxBack.Parent = TextboxModule
                TextboxBack.BackgroundColor3 = zyColor
                TextboxBack.BackgroundTransparency = Transparency
                TextboxBack.BorderSizePixel = 0
                TextboxBack.Size = UDim2.new(0, 428, 0, 38)
                TextboxBack.AutoButtonColor = false
                TextboxBack.Font = Enum.Font.GothamSemibold
                TextboxBack.Text = "   " .. text
                TextboxBack.TextColor3 = TextColor
                TextboxBack.TextSize = 16.000
                TextboxBack.TextXAlignment = Enum.TextXAlignment.Left

                TextboxBackC.CornerRadius = UDim.new(0, 6)
                TextboxBackC.Name = "TextboxBackC"
                TextboxBackC.Parent = TextboxBack
                
                -- 描边
                TextboxStroke.Name = "TextboxStroke"
                TextboxStroke.Parent = TextboxBack
                TextboxStroke.Color = BorderColor
                TextboxStroke.Thickness = 1
                TextboxStroke.Transparency = 0.5

                BoxBG.Name = "BoxBG"
                BoxBG.Parent = TextboxBack
                BoxBG.BackgroundColor3 = Background
                BoxBG.BackgroundTransparency = Transparency
                BoxBG.BorderSizePixel = 0
                BoxBG.Position = UDim2.new(0.763033211, 0, 0.289473683, 0)
                BoxBG.Size = UDim2.new(0, 100, 0, 28)
                BoxBG.AutoButtonColor = false
                BoxBG.Font = Enum.Font.Gotham
                BoxBG.Text = ""
                BoxBG.TextColor3 = TextColor
                BoxBG.TextSize = 14.000

                BoxBGC.CornerRadius = UDim.new(0, 6)
                BoxBGC.Name = "BoxBGC"
                BoxBGC.Parent = BoxBG

                TextBox.Parent = BoxBG
                TextBox.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                TextBox.BackgroundTransparency = 1.000
                TextBox.BorderSizePixel = 0
                TextBox.Size = UDim2.new(1, 0, 1, 0)
                TextBox.Font = Enum.Font.Gotham
                TextBox.Text = default
                TextBox.TextColor3 = TextColor
                TextBox.TextSize = 14.000
                TextBox.PlaceholderColor3 = Color3.fromRGB(150, 150, 150)

                TextboxBackL.Name = "TextboxBackL"
                TextboxBackL.Parent = TextboxBack
                TextboxBackL.HorizontalAlignment = Enum.HorizontalAlignment.Right
                TextboxBackL.SortOrder = Enum.SortOrder.LayoutOrder
                TextboxBackL.VerticalAlignment = Enum.VerticalAlignment.Center

                TextboxBackP.Name = "TextboxBackP"
                TextboxBackP.Parent = TextboxBack
                TextboxBackP.PaddingRight = UDim.new(0, 6)

                -- 悬停效果
                TextboxBack.MouseEnter:Connect(function()
                    game:GetService("TweenService"):Create(
                        TextboxBack,
                        TweenInfo.new(0.2),
                        {
                            BackgroundTransparency = HoverTransparency,
                            TextColor3 = AccentColor
                        }
                    ):Play()
                    game:GetService("TweenService"):Create(
                        TextboxStroke,
                        TweenInfo.new(0.2),
                        {
                            Color = AccentColor,
                            Thickness = 2
                        }
                    ):Play()
                end)

                TextboxBack.MouseLeave:Connect(function()
                    game:GetService("TweenService"):Create(
                        TextboxBack,
                        TweenInfo.new(0.2),
                        {
                            BackgroundTransparency = Transparency,
                            TextColor3 = TextColor
                        }
                    ):Play()
                    game:GetService("TweenService"):Create(
                        TextboxStroke,
                        TweenInfo.new(0.2),
                        {
                            Color = BorderColor,
                            Thickness = 1
                        }
                    ):Play()
                end)

                BoxBG.MouseEnter:Connect(function()
                    game:GetService("TweenService"):Create(
                        BoxBG,
                        TweenInfo.new(0.2),
                        {
                            BackgroundTransparency = HoverTransparency,
                            TextColor3 = AccentColor
                        }
                    ):Play()
                end)

                BoxBG.MouseLeave:Connect(function()
                    game:GetService("TweenService"):Create(
                        BoxBG,
                        TweenInfo.new(0.2),
                        {
                            BackgroundTransparency = Transparency,
                            TextColor3 = TextColor
                        }
                    ):Play()
                end)

                TextBox.Focused:Connect(function()
                    Tween(BoxBG, {0.2, "Quad", "Out"}, {
                        BackgroundTransparency = ActiveTransparency,
                        Size = UDim2.new(0, 110, 0, 28)
                    })
                end)

                TextBox.FocusLost:Connect(function()
                    Tween(BoxBG, {0.2, "Quad", "Out"}, {
                        BackgroundTransparency = Transparency,
                        Size = UDim2.new(0, 100, 0, 28)
                    })
                    if TextBox.Text == "" then
                        TextBox.Text = default
                    end
                    library.flags[flag] = TextBox.Text
                    callback(TextBox.Text)
                end)

                TextBox:GetPropertyChangedSignal("TextBounds"):Connect(function()
                    BoxBG.Size = UDim2.new(0, math.clamp(TextBox.TextBounds.X + 30, 100, 200), 0, 28)
                end)
                BoxBG.Size = UDim2.new(0, TextBox.TextBounds.X + 30, 0, 28)
            end

            function section.Slider(section, text, flag, default, min, max, precise, callback)
                local callback = callback or function() end
                local min = min or 1
                local max = max or 10
                local default = default or min
                local precise = precise or false

                library.flags[flag] = default

                assert(text, "No text provided")
                assert(flag, "No flag provided")
                assert(default, "No default value provided")

                local SliderModule = Instance.new("Frame")
                local SliderBack = Instance.new("TextButton")
                local SliderBackC = Instance.new("UICorner")
                local SliderBar = Instance.new("Frame")
                local SliderBarC = Instance.new("UICorner")
                local SliderPart = Instance.new("Frame")
                local SliderPartC = Instance.new("UICorner")
                local SliderValBG = Instance.new("TextButton")
                local SliderValBGC = Instance.new("UICorner")
                local SliderValue = Instance.new("TextBox")
                local MinSlider = Instance.new("TextButton")
                local AddSlider = Instance.new("TextButton")
                local SliderStroke = Instance.new("UIStroke")

                SliderModule.Name = "SliderModule"
                SliderModule.Parent = Objs
                SliderModule.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                SliderModule.BackgroundTransparency = 1.000
                SliderModule.BorderSizePixel = 0
                SliderModule.Position = UDim2.new(0, 0, 0, 0)
                SliderModule.Size = UDim2.new(0, 428, 0, 38)
                
                -- 初始动画
                SliderModule.Position = UDim2.new(0, 20, 0, 0)
                SliderModule.BackgroundTransparency = 1
                Tween(SliderModule, {0.2, "Quad", "Out"}, {
                    Position = UDim2.new(0, 0, 0, 0),
                    BackgroundTransparency = 1
                })

                SliderBack.Name = "SliderBack"
                SliderBack.Parent = SliderModule
                SliderBack.BackgroundColor3 = zyColor
                SliderBack.BackgroundTransparency = Transparency
                SliderBack.BorderSizePixel = 0
                SliderBack.Size = UDim2.new(0, 428, 0, 38)
                SliderBack.AutoButtonColor = false
                SliderBack.Font = Enum.Font.GothamSemibold
                SliderBack.Text = "   " .. text
                SliderBack.TextColor3 = TextColor
                SliderBack.TextSize = 16.000
                SliderBack.TextXAlignment = Enum.TextXAlignment.Left

                SliderBackC.CornerRadius = UDim.new(0, 6)
                SliderBackC.Name = "SliderBackC"
                SliderBackC.Parent = SliderBack
                
                -- 描边
                SliderStroke.Name = "SliderStroke"
                SliderStroke.Parent = SliderBack
                SliderStroke.Color = BorderColor
                SliderStroke.Thickness = 1
                SliderStroke.Transparency = 0.5

                SliderBar.Name = "SliderBar"
                SliderBar.Parent = SliderBack
                SliderBar.AnchorPoint = Vector2.new(0, 0.5)
                SliderBar.BackgroundColor3 = Background
                SliderBar.BackgroundTransparency = Transparency
                SliderBar.BorderSizePixel = 0
                SliderBar.Position = UDim2.new(0.369000018, 40, 0.5, 0)
                SliderBar.Size = UDim2.new(0, 140, 0, 12)

                SliderBarC.CornerRadius = UDim.new(0, 4)
                SliderBarC.Name = "SliderBarC"
                SliderBarC.Parent = SliderBar

                SliderPart.Name = "SliderPart"
                SliderPart.Parent = SliderBar
                SliderPart.BackgroundColor3 = AccentColor
                SliderPart.BorderSizePixel = 0
                SliderPart.Size = UDim2.new(0, 54, 0, 13)

                SliderPartC.CornerRadius = UDim.new(0, 4)
                SliderPartC.Name = "SliderPartC"
                SliderPartC.Parent = SliderPart

                SliderValBG.Name = "SliderValBG"
                SliderValBG.Parent = SliderBack
                SliderValBG.BackgroundColor3 = Background
                SliderValBG.BackgroundTransparency = Transparency
                SliderValBG.BorderSizePixel = 0
                SliderValBG.Position = UDim2.new(0.883177578, 0, 0.131578952, 0)
                SliderValBG.Size = UDim2.new(0, 44, 0, 28)
                SliderValBG.AutoButtonColor = false
                SliderValBG.Font = Enum.Font.Gotham
                SliderValBG.Text = ""
                SliderValBG.TextColor3 = TextColor
                SliderValBG.TextSize = 14.000

                SliderValBGC.CornerRadius = UDim.new(0, 6)
                SliderValBGC.Name = "SliderValBGC"
                SliderValBGC.Parent = SliderValBG

                SliderValue.Name = "SliderValue"
                SliderValue.Parent = SliderValBG
                SliderValue.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                SliderValue.BackgroundTransparency = 1.000
                SliderValue.BorderSizePixel = 0
                SliderValue.Size = UDim2.new(1, 0, 1, 0)
                SliderValue.Font = Enum.Font.Gotham
                SliderValue.Text = "1000"
                SliderValue.TextColor3 = TextColor
                SliderValue.TextSize = 14.000

                MinSlider.Name = "MinSlider"
                MinSlider.Parent = SliderModule
                MinSlider.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                MinSlider.BackgroundTransparency = 1.000
                MinSlider.BorderSizePixel = 0
                MinSlider.Position = UDim2.new(0.296728969, 40, 0.236842096, 0)
                MinSlider.Size = UDim2.new(0, 20, 0, 20)
                MinSlider.Font = Enum.Font.Gotham
                MinSlider.Text = "-"
                MinSlider.TextColor3 = TextColor
                MinSlider.TextSize = 24.000
                MinSlider.TextWrapped = true

                AddSlider.Name = "AddSlider"
                AddSlider.Parent = SliderModule
                AddSlider.AnchorPoint = Vector2.new(0, 0.5)
                AddSlider.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                AddSlider.BackgroundTransparency = 1.000
                AddSlider.BorderSizePixel = 0
                AddSlider.Position = UDim2.new(0.810906529, 0, 0.5, 0)
                AddSlider.Size = UDim2.new(0, 20, 0, 20)
                AddSlider.Font = Enum.Font.Gotham
                AddSlider.Text = "+"
                AddSlider.TextColor3 = TextColor
                AddSlider.TextSize = 24.000
                AddSlider.TextWrapped = true

                -- 悬停效果
                SliderBack.MouseEnter:Connect(function()
                    game:GetService("TweenService"):Create(
                        SliderBack,
                        TweenInfo.new(0.2),
                        {
                            BackgroundTransparency = HoverTransparency,
                            TextColor3 = AccentColor
                        }
                    ):Play()
                    game:GetService("TweenService"):Create(
                        SliderStroke,
                        TweenInfo.new(0.2),
                        {
                            Color = AccentColor,
                            Thickness = 2
                        }
                    ):Play()
                end)

                SliderBack.MouseLeave:Connect(function()
                    game:GetService("TweenService"):Create(
                        SliderBack,
                        TweenInfo.new(0.2),
                        {
                            BackgroundTransparency = Transparency,
                            TextColor3 = TextColor
                        }
                    ):Play()
                    game:GetService("TweenService"):Create(
                        SliderStroke,
                        TweenInfo.new(0.2),
                        {
                            Color = BorderColor,
                            Thickness = 1
                        }
                    ):Play()
                end)

                SliderValBG.MouseEnter:Connect(function()
                    game:GetService("TweenService"):Create(
                        SliderValBG,
                        TweenInfo.new(0.2),
                        {
                            BackgroundTransparency = HoverTransparency,
                            TextColor3 = AccentColor
                        }
                    ):Play()
                end)

                SliderValBG.MouseLeave:Connect(function()
                    game:GetService("TweenService"):Create(
                        SliderValBG,
                        TweenInfo.new(0.2),
                        {
                            BackgroundTransparency = Transparency,
                            TextColor3 = TextColor
                        }
                    ):Play()
                end)

                MinSlider.MouseEnter:Connect(function()
                    game:GetService("TweenService"):Create(
                        MinSlider,
                        TweenInfo.new(0.2),
                        {
                            TextColor3 = AccentColor,
                            TextSize = 28.000
                        }
                    ):Play()
                end)

                MinSlider.MouseLeave:Connect(function()
                    game:GetService("TweenService"):Create(
                        MinSlider,
                        TweenInfo.new(0.2),
                        {
                            TextColor3 = TextColor,
                            TextSize = 24.000
                        }
                    ):Play()
                end)

                AddSlider.MouseEnter:Connect(function()
                    game:GetService("TweenService"):Create(
                        AddSlider,
                        TweenInfo.new(0.2),
                        {
                            TextColor3 = AccentColor,
                            TextSize = 28.000
                        }
                    ):Play()
                end)

                AddSlider.MouseLeave:Connect(function()
                    game:GetService("TweenService"):Create(
                        AddSlider,
                        TweenInfo.new(0.2),
                        {
                            TextColor3 = TextColor,
                            TextSize = 24.000
                        }
                    ):Play()
                end)

                local funcs = {
                    SetValue = function(self, value)
                        local percent = (mouse.X - SliderBar.AbsolutePosition.X) / SliderBar.AbsoluteSize.X
                        if value then
                            percent = (value - min) / (max - min)
                        end
                        percent = math.clamp(percent, 0, 1)
                        if precise then
                            value = value or tonumber(string.format("%.1f", tostring(min + (max - min) * percent))
                        else
                            value = value or math.floor(min + (max - min) * percent)
                        end
                        library.flags[flag] = tonumber(value)
                        SliderValue.Text = tostring(value)
                        
                        -- 滑块动画
                        Tween(SliderPart, {0.1, "Quad", "Out"}, {
                            Size = UDim2.new(percent, 0, 1, 0)
                        })
                        
                        -- 数值变化动画
                        Tween(SliderValBG, {0.1, "Quad", "Out"}, {
                            Size = UDim2.new(0, SliderValue.TextBounds.X + 30, 0, 28)
                        })
                        
                        callback(tonumber(value))
                    end
                }

                MinSlider.MouseButton1Click:Connect(
                    function()
                        local currentValue = library.flags[flag]
                        currentValue = math.clamp(currentValue - 1, min, max)
                        funcs:SetValue(currentValue)
                        
                        -- 点击动画
                        Tween(MinSlider, {0.1, "Quad", "Out"}, {
                            TextSize = 20.000
                        }, function()
                            Tween(MinSlider, {0.1, "Quad", "Out"}, {
                                TextSize = 24.000
                            })
                        end)
                    end
                )

                AddSlider.MouseButton1Click:Connect(
                    function()
                        local currentValue = library.flags[flag]
                        currentValue = math.clamp(currentValue + 1, min, max)
                        funcs:SetValue(currentValue)
                        
                        -- 点击动画
                        Tween(AddSlider, {0.1, "Quad", "Out"}, {
                            TextSize = 20.000
                        }, function()
                            Tween(AddSlider, {0.1, "Quad", "Out"}, {
                                TextSize = 24.000
                            })
                        end)
                    end
                )

                funcs:SetValue(default)

                local dragging, boxFocused, allowed =
                    false,
                    false,
                    {
                        [""] = true,
                        ["-"] = true
                    }

                SliderBar.InputBegan:Connect(
                    function(input)
                        if input.UserInputType == Enum.UserInputType.MouseButton1 then
                            dragging = true
                            funcs:SetValue()
                            
                            -- 点击动画
                            Tween(SliderBar, {0.1, "Quad", "Out"}, {
                                Size = UDim2.new(0, 140, 0, 10)
                            })
                        end
                    end
                )

                services.UserInputService.InputEnded:Connect(
                    function(input)
                        if dragging and input.UserInputType == Enum.UserInputType.MouseButton1 then
                            dragging = false
                            
                            -- 释放动画
                            Tween(SliderBar, {0.1, "Quad", "Out"}, {
                                Size = UDim2.new(0, 140, 0, 12)
                            })
                        end
                    end
                )

                services.UserInputService.InputChanged:Connect(
                    function(input)
                        if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
                            funcs:SetValue()
                        end
                    end
                )

                SliderValue.Focused:Connect(
                    function()
                        boxFocused = true
                        Tween(SliderValBG, {0.2, "Quad", "Out"}, {
                            BackgroundTransparency = ActiveTransparency,
                            Size = UDim2.new(0, SliderValue.TextBounds.X + 40, 0, 28)
                        })
                    end
                )

                SliderValue.FocusLost:Connect(
                    function()
                        boxFocused = false
                        Tween(SliderValBG, {0.2, "Quad", "Out"}, {
                            BackgroundTransparency = Transparency,
                            Size = UDim2.new(0, SliderValue.TextBounds.X + 30, 0, 28)
                        })
                        if SliderValue.Text == "" then
                            funcs:SetValue(default)
                        end
                    end
                )

                SliderValue:GetPropertyChangedSignal("Text"):Connect(
                    function()
                        if not boxFocused then
                            return
                        end
                        SliderValue.Text = SliderValue.Text:gsub("%D+", "")

                        local text = SliderValue.Text

                        if not tonumber(text) then
                            SliderValue.Text = SliderValue.Text:gsub("%D+", "")
                        elseif not allowed[text] then
                            if tonumber(text) > max then
                                text = max
                                SliderValue.Text = tostring(max)
                            end
                            funcs:SetValue(tonumber(text))
                        end
                    end
                )

                return funcs
            end
            
            function section.Dropdown(section, text, flag, options, callback)
                local callback = callback or function() end
                local options = options or {}
                assert(text, "No text provided")
                assert(flag, "No flag provided")

                library.flags[flag] = nil

                local DropdownModule = Instance.new("Frame")
                local DropdownTop = Instance.new("TextButton")
                local DropdownTopC = Instance.new("UICorner")
                local DropdownOpen = Instance.new("TextButton")
                local DropdownText = Instance.new("TextBox")
                local DropdownModuleL = Instance.new("UIListLayout")
                local DropdownStroke = Instance.new("UIStroke")

                DropdownModule.Name = "DropdownModule"
                DropdownModule.Parent = Objs
                DropdownModule.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                DropdownModule.BackgroundTransparency = 1.000
                DropdownModule.BorderSizePixel = 0
                DropdownModule.ClipsDescendants = true
                DropdownModule.Position = UDim2.new(0, 0, 0, 0)
                DropdownModule.Size = UDim2.new(0, 428, 0, 38)
                
                -- 初始动画
                DropdownModule.Position = UDim2.new(0, 20, 0, 0)
                DropdownModule.BackgroundTransparency = 1
                Tween(DropdownModule, {0.2, "Quad", "Out"}, {
                    Position = UDim2.new(0, 0, 0, 0),
                    BackgroundTransparency = 1
                })

                DropdownTop.Name = "DropdownTop"
                DropdownTop.Parent = DropdownModule
                DropdownTop.BackgroundColor3 = zyColor
                DropdownTop.BackgroundTransparency = Transparency
                DropdownTop.BorderSizePixel = 0
                DropdownTop.Size = UDim2.new(0, 428, 0, 38)
                DropdownTop.AutoButtonColor = false
                DropdownTop.Font = Enum.Font.GothamSemibold
                DropdownTop.Text = ""
                DropdownTop.TextColor3 = TextColor
                DropdownTop.TextSize = 16.000
                DropdownTop.TextXAlignment = Enum.TextXAlignment.Left

                DropdownTopC.CornerRadius = UDim.new(0, 6)
                DropdownTopC.Name = "DropdownTopC"
                DropdownTopC.Parent = DropdownTop
                
                -- 描边
                DropdownStroke.Name = "DropdownStroke"
                DropdownStroke.Parent = DropdownTop
                DropdownStroke.Color = BorderColor
                DropdownStroke.Thickness = 1
                DropdownStroke.Transparency = 0.5

                DropdownOpen.Name = "DropdownOpen"
                DropdownOpen.Parent = DropdownTop
                DropdownOpen.AnchorPoint = Vector2.new(0, 0.5)
                DropdownOpen.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                DropdownOpen.BackgroundTransparency = 1.000
                DropdownOpen.BorderSizePixel = 0
                DropdownOpen.Position = UDim2.new(0.918383181, 0, 0.5, 0)
                DropdownOpen.Size = UDim2.new(0, 20, 0, 20)
                DropdownOpen.Font = Enum.Font.Gotham
                DropdownOpen.Text = "+"
                DropdownOpen.TextColor3 = TextColor
                DropdownOpen.TextSize = 24.000
                DropdownOpen.TextWrapped = true

                DropdownText.Name = "DropdownText"
                DropdownText.Parent = DropdownTop
                DropdownText.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
                DropdownText.BackgroundTransparency = 1.000
                DropdownText.BorderSizePixel = 0
                DropdownText.Position = UDim2.new(0.0373831764, 0, 0, 0)
                DropdownText.Size = UDim2.new(0, 184, 0, 38)
                DropdownText.Font = Enum.Font.GothamSemibold
                DropdownText.PlaceholderColor3 = Color3.fromRGB(150, 150, 150)
                DropdownText.PlaceholderText = text
                DropdownText.Text = ""
                DropdownText.TextColor3 = TextColor
                DropdownText.TextSize = 16.000
                DropdownText.TextXAlignment = Enum.TextXAlignment.Left

                DropdownModuleL.Name = "DropdownModuleL"
                DropdownModuleL.Parent = DropdownModule
                DropdownModuleL.SortOrder = Enum.SortOrder.LayoutOrder
                DropdownModuleL.Padding = UDim.new(0, 4)

                -- 悬停效果
                DropdownTop.MouseEnter:Connect(function()
                    game:GetService("TweenService"):Create(
                        DropdownTop,
                        TweenInfo.new(0.2),
                        {
                            BackgroundTransparency = HoverTransparency,
                            TextColor3 = AccentColor
                        }
                    ):Play()
                    game:GetService("TweenService"):Create(
                        DropdownStroke,
                        TweenInfo.new(0.2),
                        {
                            Color = AccentColor,
                            Thickness = 2
                        }
                    ):Play()
                end)

                DropdownTop.MouseLeave:Connect(function()
                    game:GetService("TweenService"):Create(
                        DropdownTop,
                        TweenInfo.new(0.2),
                        {
                            BackgroundTransparency = Transparency,
                            TextColor3 = TextColor
                        }
                    ):Play()
                    game:GetService("TweenService"):Create(
                        DropdownStroke,
                        TweenInfo.new(0.2),
                        {
                            Color = BorderColor,
                            Thickness = 1
                        }
                    ):Play()
                end)

                DropdownOpen.MouseEnter:Connect(function()
                    game:GetService("TweenService"):Create(
                        DropdownOpen,
                        TweenInfo.new(0.2),
                        {
                            TextColor3 = AccentColor,
                            TextSize = 28.000
                        }
                    ):Play()
                end)

                DropdownOpen.MouseLeave:Connect(function()
                    game:GetService("TweenService"):Create(
                        DropdownOpen,
                        TweenInfo.new(0.2),
                        {
                            TextColor3 = TextColor,
                            TextSize = 24.000
                        }
                    ):Play()
                end)

                local setAllVisible = function()
                    local options = DropdownModule:GetChildren()
                    for i = 1, #options do
                        local option = options[i]
                        if option:IsA("TextButton") and option.Name:match("Option_") then
                            option.Visible = true
                            
                            -- 选项动画
                            option.Position = UDim2.new(0, 0, 0, -10)
                            option.BackgroundTransparency = 1
                            Tween(option, {0.2, "Quad", "Out"}, {
                                Position = UDim2.new(0, 0, 0, 0),
                                BackgroundTransparency = Transparency
                            })
                        end
                    end
                end

                local searchDropdown = function(text)
                    local options = DropdownModule:GetChildren()
                    for i = 1, #options do
                        local option = options[i]
                        if text == "" then
                            setAllVisible()
                        else
                            if option:IsA("TextButton") and option.Name:match("Option_") then
                                if option.Text:lower():match(text:lower()) then
                                    option.Visible = true
                                    
                                    -- 选项动画
                                    option.Position = UDim2.new(0, 0, 0, -10)
                                    option.BackgroundTransparency = 1
                                    Tween(option, {0.2, "Quad", "Out"}, {
                                        Position = UDim2.new(0, 0, 0, 0),
                                        BackgroundTransparency = Transparency
                                    })
                                else
                                    option.Visible = false
                                end
                            end
                        end
                    end
                end

                local open = false
                local ToggleDropVis = function()
                    open = not open
                    if open then
                        setAllVisible()
                    end
                    
                    -- 箭头动画
                    Tween(DropdownOpen, {0.2, "Quad", "Out"}, {
                        Text = (open and "-" or "+"),
                        Rotation = (open and 180 or 0)
                    })
                    
                    -- 下拉框动画
                    Tween(DropdownModule, {0.2, "Quad", "Out"}, {
                        Size = UDim2.new(0, 428, 0, (open and DropdownModuleL.AbsoluteContentSize.Y + 4 or 38))
                    })
                end

                DropdownOpen.MouseButton1Click:Connect(ToggleDropVis)
                DropdownText.Focused:Connect(
                    function()
                        if open then
                            return
                        end
                        ToggleDropVis()
                    end
                )

                DropdownText:GetPropertyChangedSignal("Text"):Connect(
                    function()
                        if not open then
                            return
                        end
                        searchDropdown(DropdownText.Text)
                    end
                )

                DropdownModuleL:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(
                    function()
                        if not open then
                            return
                        end
                        DropdownModule.Size = UDim2.new(0, 428, 0, (DropdownModuleL.AbsoluteContentSize.Y + 4))
                    end
                )

                local funcs = {}
                funcs.AddOption = function(self, option)
                    local Option = Instance.new("TextButton")
                    local OptionC = Instance.new("UICorner")
                    local OptionStroke = Instance.new("UIStroke")

                    Option.Name = "Option_" .. option
                    Option.Parent = DropdownModule
                    Option.BackgroundColor3 = zyColor
                    Option.BackgroundTransparency = Transparency
                    Option.BorderSizePixel = 0
                    Option.Position = UDim2.new(0, 0, 0.328125, 0)
                    Option.Size = UDim2.new(0, 428, 0, 26)
                    Option.AutoButtonColor = false
                    Option.Font = Enum.Font.Gotham
                    Option.Text = option
                    Option.TextColor3 = TextColor
                    Option.TextSize = 14.000
                    Option.Visible = false

                    OptionC.CornerRadius = UDim.new(0, 6)
                    OptionC.Name = "OptionC"
                    OptionC.Parent = Option
                    
                    -- 描边
                    OptionStroke.Name = "OptionStroke"
                    OptionStroke.Parent = Option
                    OptionStroke.Color = BorderColor
                    OptionStroke.Thickness = 1
                    OptionStroke.Transparency = 0.5

                    -- 选项悬停效果
                    Option.MouseEnter:Connect(function()
                        game:GetService("TweenService"):Create(
                            Option,
                            TweenInfo.new(0.2),
                            {
                                BackgroundTransparency = HoverTransparency,
                                TextColor3 = AccentColor
                            }
                        ):Play()
                        game:GetService("TweenService"):Create(
                            OptionStroke,
                            TweenInfo.new(0.2),
                            {
                                Color = AccentColor,
                                Thickness = 2
                            }
                        ):Play()
                    end)

                    Option.MouseLeave:Connect(function()
                        game:GetService("TweenService"):Create(
                            Option,
                            TweenInfo.new(0.2),
                            {
                                BackgroundTransparency = Transparency,
                                TextColor3 = TextColor
                            }
                        ):Play()
                        game:GetService("TweenService"):Create(
                            OptionStroke,
                            TweenInfo.new(0.2),
                            {
                                Color = BorderColor,
                                Thickness = 1
                            }
                        ):Play()
                    end)

                    Option.MouseButton1Click:Connect(
                        function()
                            ToggleDropVis()
                            callback(Option.Text)
                            
                            -- 选择动画
                            Tween(Option, {0.1, "Quad", "Out"}, {
                                BackgroundTransparency = ActiveTransparency,
                                Size = UDim2.new(0, 428, 0, 24)
                            }, function()
                                Tween(Option, {0.1, "Quad", "Out"}, {
                                    BackgroundTransparency = Transparency,
                                    Size = UDim2.new(0, 428, 0, 26)
                                })
                            end)
                            
                            DropdownText.Text = Option.Text
                            library.flags[flag] = Option.Text
                        end
                    )
                end

                funcs.RemoveOption = function(self, option)
                    local option = DropdownModule:FindFirstChild("Option_" .. option)
                    if option then
                        -- 移除动画
                        Tween(option, {0.2, "Quad", "Out"}, {
                            BackgroundTransparency = 1,
                            Size = UDim2.new(0, 0, 0, 26)
                        }, function()
                            option:Destroy()
                        end)
                    end
                end

                funcs.SetOptions = function(self, options)
                    for _, v in next, DropdownModule:GetChildren() do
                        if v.Name:match("Option_") then
                            v:Destroy()
                        end
                    end
                    for _, v in next, options do
                        funcs:AddOption(v)
                    end
                end

                funcs:SetOptions(options)

                return funcs
            end
            return section
        end
        return tab
    end
    return window
end
return library
